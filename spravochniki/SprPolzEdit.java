/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stomatology.spravochniki;

import com.michaelbaranov.microba.calendar.CalendarPane;
import com.michaelbaranov.microba.calendar.DatePicker;
import com.michaelbaranov.microba.gradienteditor.GradientEditor;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import stomatology.DatabaseTableModel;
import stomatology.JCheckBoxSpec;
import stomatology.Methods;
import stomatology.SpecVrachEdit;
import stomatology.Start;
import static stomatology.Start.sDB;
import stomatology.Vrach;

/**
 *
 * @author Asus
 */
public class SprPolzEdit extends javax.swing.JDialog {

    DatePicker datePicker;
    public static JCheckBoxSpec[] listData;
    JCheckBoxSpec[] listDataEmpty = null;

    /**
     * Creates new form SprPolzEdit
     */
    public SprPolzEdit(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        pan.add("DatePicker", buildDatePickerTab());
        listData = Start.sDB.getStringArrSpec(0);
        specList.setListData(listData);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        newDtRojField = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        newImyaField = new javax.swing.JTextField();
        newRoleField = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        newSqlLogin = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        newOtchField = new javax.swing.JTextField();
        newFamField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        newTelField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        newPswField = new javax.swing.JPasswordField();
        pan = new javax.swing.JPanel();
        specLabel = new javax.swing.JLabel();
        addSpec = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        newDtRojField.setEditable(false);
        newDtRojField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDtRojFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("Телефон");

        newRoleField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Врач\t", "Администратор" }));
        newRoleField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                newRoleFieldItemStateChanged(evt);
            }
        });
        newRoleField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newRoleFieldActionPerformed(evt);
            }
        });

        jLabel11.setText("Роль");

        jLabel4.setText("Отчество");

        jLabel1.setText("Фамилия");

        jLabel7.setText("SQL логин");

        addButton.setText("Добавить");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Дата рождения");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Редактирование пользователя");

        cancelButton.setText("Отмена");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Имя");

        jLabel12.setText("SQL пароль");

        pan.setLayout(new javax.swing.BoxLayout(pan, javax.swing.BoxLayout.LINE_AXIS));

        specLabel.setText("Специализации врача");

        addSpec.setText("Добавить специализацию");
        addSpec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSpecActionPerformed(evt);
            }
        });

        //listData = Start.sDB.getStringArrSpec(-1);
        //try {
            //specList.setListData(listData);
            //} catch (Exception ex){
            //System.out.println("Создание таблицы основные обследования ошибка доступа к RS"+ ex);
            //}
        jScrollPane2.setViewportView(specList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(newPswField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(newTelField))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(newFamField))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(newImyaField)
                                .addComponent(newOtchField)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(newRoleField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(newSqlLogin)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(newDtRojField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pan, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(2, 2, 2)))
                    .addComponent(specLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addSpec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(newFamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(newImyaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newOtchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newDtRojField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pan, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(newTelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(newSqlLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(newPswField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newRoleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(specLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSpec, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newDtRojFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDtRojFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newDtRojFieldActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        int rezult = 0;

        try {
            if (!sDB.getConn().isValid(100)) {
                JOptionPane.showMessageDialog(null, "Соединение было разорвано", "Внимание", JOptionPane.INFORMATION_MESSAGE);
                System.exit(0);
            }
        } catch (SQLException ex) {
            System.out.println("Обшибка подключения " + ex);;
        }

        Calendar calendar = Calendar.getInstance();
        calendar.setTime(datePicker.getDate()); // Date date
        Calendar calNow = Calendar.getInstance();
        calNow.setTime(new Date());
        //calNow.get(Calendar.)
        char[] ch = newPswField.getPassword();
        StringBuilder sb = new StringBuilder();
        for (char c : ch) {
            if (c != ' ') {
                sb.append(c);
            }
        }

        if (newFamField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Необходимо заполнить фамилию", "Внимание", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (newImyaField.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Необходимо заполнить имя", "Внимание", JOptionPane.INFORMATION_MESSAGE);
            } else {
                if (newTelField.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Необходимо заполнить телефон", "Внимание", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    if (calendar.get(Calendar.YEAR) > calNow.get(Calendar.YEAR) - 18) {
                        JOptionPane.showMessageDialog(null, "Год рождения должен быть не позже " + (calNow.get(Calendar.YEAR) - 18), "Внимание", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        if (newSqlLogin.getText().equals("")) {
                            JOptionPane.showMessageDialog(null, "Необходимо заполнить SQLLogin" + (calNow.get(Calendar.YEAR) - 18), "Внимание", JOptionPane.INFORMATION_MESSAGE);
                        } else {

                            if (newRoleField.getSelectedItem().toString().trim().equals("Врач") && listData.length < 1) {
                                JOptionPane.showMessageDialog(null, "Необходимо заполнить специализацию врача", "Внимание", JOptionPane.INFORMATION_MESSAGE);
                            } else {
                                if (Start.sDB.getCountPolzov(newSqlLogin.getText()) == 0) {
                                    newDtRojField.setText(Methods.stringToDate(calendar.get(Calendar.DAY_OF_MONTH), calendar.get(Calendar.MONTH) + 1, calendar.get(Calendar.YEAR)));
                                    int idRole = Start.sDB.getIdRole(newRoleField.getSelectedItem().toString());
                                    System.out.println("idRole  = " + idRole);
                                    Vrach vr = new Vrach(0, newSqlLogin.getText(), newFamField.getText(), newImyaField.getText(), newOtchField.getText(), newTelField.getText(), newDtRojField.getText(), idRole, sb.toString());
                                    rezult = Start.sDB.setVrach(vr);
                                    if (Start.sDB.err.equals("")) {
                                        if (rezult != 0) {
                                            JOptionPane.showMessageDialog(null, "Пользователь успешно добавлен", "Имя клиента" + vr.getFIO(vr), JOptionPane.INFORMATION_MESSAGE);
                                            dispose();
                                        }
                                    } else {
                                    JOptionPane.showMessageDialog(null, "Произошла ошибка " + Start.sDB.err, "Внимание", JOptionPane.INFORMATION_MESSAGE);
                                }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Пользователь с таким login уже существует " + Start.sDB.err, "Внимание", JOptionPane.INFORMATION_MESSAGE);
                                }     
                            }
                        }
                    }
                }
            }
        }


    }//GEN-LAST:event_addButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Изменения будут потеряны", "Внимание", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (newRoleField.getSelectedItem().toString().trim().equals("Врач")) {
            //tableSpecScroll.setVisible(true);
        } else {
            //tableSpecScroll.setVisible(false);
        }


    }//GEN-LAST:event_formWindowActivated

    private void newRoleFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newRoleFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newRoleFieldActionPerformed

    private void newRoleFieldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_newRoleFieldItemStateChanged

        System.out.println("newRoleField.getSelectedItem().toString() " + newRoleField.getSelectedItem().toString());

        if (newRoleField.getSelectedItem().toString().trim().equals("Врач")) {
            //System.out.println("1");
            addSpec.setVisible(true);
            //tableSpecScroll.setVisible(true);
        } else {
            //System.out.println("2");

            for (JCheckBoxSpec chBox : listData) {
                chBox.setSelect(false);
            }
            specList.setListData(listData);

            //specList.setListData(listDataEmpty);
            //specList.removeAll();
            specList.updateUI();
            specList.repaint();
            addSpec.setVisible(false);
            //tableSpecScroll.setVisible(false);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_newRoleFieldItemStateChanged

    private void addSpecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSpecActionPerformed

        JCheckBoxSpec[] listSpecAll = Start.sDB.getStringArrSpec(-1);
        System.out.println("listSpecAll.length" + listSpecAll.length);
        for (JCheckBoxSpec chBox : listSpecAll) {
            System.out.println("SprPolzEdit.listData.length " + SprPolzEdit.listData.length);
            for (JCheckBoxSpec chBoxSelected : SprPolzEdit.listData) {
                if (chBoxSelected.getId() == chBox.getId()) {
                    System.out.println("chBox.setSelect(chBoxSelected.isSelect());" + chBox.getNameSpec());
                    chBox.setSelect(chBoxSelected.isSelect());
                }
            }
        }

        SpecVrachEdit specVrachEdit = new SpecVrachEdit(null, rootPaneCheckingEnabled, listSpecAll);
        specVrachEdit.setLocation(addSpec.getX() + addSpec.getWidth(), addSpec.getY());
        specVrachEdit.setVisible(true);
    }//GEN-LAST:event_addSpecActionPerformed

    private JComponent buildDatePickerTab() {
        JPanel panel = new JPanel();
        datePicker = new DatePicker();
        // datePicker.setDateFormat(new SimpleDateFormat("HH dd yyyy"));
        datePicker.setDateFormat(SimpleDateFormat.getDateTimeInstance());
        // datePicker.setStripTime(false);
        datePicker.setEnabled(false);
        datePicker.setKeepTime(true);
        datePicker.setStripTime(false);
        datePicker.setShowNumberOfWeek(true);
        // datePicker.setEnabled(false);
        // datePicker.setPickerStyle(DatePicker.PICKER_STYLE_BUTTON);
        // datePicker.showButtonOnly(false);
        // datePicker.setToolTipText("hello!!!!");
        // datePicker.setShowNumberOfWeek(true);

        Map ov = new HashMap();

        ov.put(CalendarPane.COLOR_CALENDAR_GRID_FOREGROUND_ENABLED,
                Color.BLUE);

        datePicker.setColorOverrideMap(ov);

        panel.setLayout(new GridBagLayout());
        panel.add(datePicker, new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0,
                GridBagConstraints.CENTER, GridBagConstraints.NONE, new Insets(
                        5, 5, 5, 5), 0, 0));

        datePicker.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                System.out.println("DatePicker:" + datePicker.getDate());

            }
        });

        return panel;

    }

    private static class ColorAdaptor implements ChangeListener,
            ListSelectionListener {

        private GradientEditor editor;

        private JColorChooser chooser;

        public ColorAdaptor(GradientEditor editor, JColorChooser chooser) {
            super();
            this.editor = editor;
            this.chooser = chooser;

            editor.getColorSelectionModel().addListSelectionListener(this);
            chooser.getSelectionModel().addChangeListener(this);
        }

        public void valueChanged(ListSelectionEvent e) {
            int index = editor.getColorSelectionModel().getLeadSelectionIndex();
            // System.out.println(index);
            // System.out.println(e.getFirstIndex());
            // System.out.println(e.getLastIndex());
            // System.out.println("-------");

            Color c = (Color) editor.getDataModel().getValueAt(index,
                    editor.getColorColumn());
            chooser.setColor(c);
        }

        public void stateChanged(ChangeEvent e) {

            if (!editor.getColorSelectionModel().isSelectionEmpty()) {
                int index = editor.getColorSelectionModel()
                        .getLeadSelectionIndex();

                editor.getDataModel().setValueAt(chooser.getColor(), index,
                        editor.getColorColumn());
            }

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SprPolzEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SprPolzEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SprPolzEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SprPolzEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SprPolzEdit dialog = new SprPolzEdit(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton addSpec;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JFormattedTextField newDtRojField;
    private javax.swing.JTextField newFamField;
    private javax.swing.JTextField newImyaField;
    private javax.swing.JTextField newOtchField;
    private javax.swing.JPasswordField newPswField;
    private javax.swing.JComboBox newRoleField;
    private javax.swing.JTextField newSqlLogin;
    private javax.swing.JTextField newTelField;
    private javax.swing.JPanel pan;
    private javax.swing.JLabel specLabel;
    public static final javax.swing.JList specList = new javax.swing.JList();
    // End of variables declaration//GEN-END:variables
}
