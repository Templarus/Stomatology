/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stomatology;

import com.michaelbaranov.microba.calendar.CalendarPane;
import com.michaelbaranov.microba.calendar.DatePicker;
import com.michaelbaranov.microba.gradienteditor.GradientEditor;
import com.oracle.jrockit.jfr.ContentType;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JColorChooser;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Asus
 */
public class SprPerenapravEdit extends javax.swing.JDialog {
DatePicker datePicker;
DatePicker datePickerPodtv;
int whichForm; //С какой формы открывается
int idClient;
Perenaprav perenap;
    /**
     * Creates new form SprPerenapravEdit
     */
    public SprPerenapravEdit(java.awt.Frame parent, boolean modal, int whichForm, int idCliet) {
        super(parent, modal);
        this.whichForm = whichForm;
        this.idClient = idCliet;
//         this.nameClient.setText(MainForm.cl.getFIO_client());
        initComponents();
        panDtNaprav.add("DatePicker", buildDatePickerTab());
        panDtPodtv.add("DatePickerPodtv", buildDatePickerTabPodtv());
        nameClient.setText(Start.sDB.getFIOClient(idClient));
        //System.out.println("ТЕСТОВОЕ ЗНАЧЕНИЕ = " + Start.sDB.getFIOClient(idClient));
        //nameClient.setVerifyInputWhenFocusTarget(true);
        if(whichForm == 1){
            panDtPodtv.setVisible(false);
        }else {
            panDtNaprav.setVisible(false);
            nameSpec.setEnabled(false);
            nameVrachPoluch.setEnabled(false);
            perenap = Start.sDB.getPerenaprav(Start.sDB.getIdPerenaprav(idClient, Find.vr.getId()));
            nameClient.setText(Start.sDB.getFIOClient(perenap.getIdClient()));
            dtNaprav.setText(perenap.getDtOtprav());
            primech.setText(perenap.getPrim());
            System.out.println(" perenap.getIdPerenaprav() = " + perenap.getIdPerenaprav());
            System.out.println(" perenap.getIdVrachPoluch() = " + perenap.getIdVrachPoluch());
            for(int i = 0; i < nameSpec.getItemCount(); i ++ ){
                if(nameSpec.getItemAt(i).toString().equals(Start.sDB.getNamrSpec(perenap.getIdSpecVrach()))){
                    nameSpec.setSelectedIndex(i);
                }
            }
            nameVrachPoluch.removeAllItems();
            System.out.println("Start.sDB.getFIOVrach(perenap.getIdVrachPoluch()) = " + Start.sDB.getFIOVrach(perenap.getIdVrachPoluch()));
            nameVrachPoluch.addItem(Start.sDB.getFIOVrach(perenap.getIdVrachPoluch()));
        }
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Name1 = new javax.swing.JLabel();
        nameClient = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dtNaprav = new javax.swing.JTextField();
        nameSpec = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        nameVrachPoluch = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dtPodtv = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        primech = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();
        knSave = new javax.swing.JButton();
        knCancel = new javax.swing.JButton();
        panDtNaprav = new javax.swing.JPanel();
        panDtPodtv = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Перенаправление");
        setResizable(false);

        Name1.setBackground(new java.awt.Color(211, 207, 203));
        Name1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Name1.setText("Клиент");
        Name1.setPreferredSize(new java.awt.Dimension(150, 20));

        nameClient.setBackground(new java.awt.Color(211, 207, 203));
        nameClient.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nameClient.setForeground(new java.awt.Color(102, 102, 255));
        nameClient.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nameClient.setPreferredSize(new java.awt.Dimension(150, 20));

        jLabel4.setText("Дата перенаправления");

        dtNaprav.setEditable(false);

        try {
            ResultSet rs = Start.sDB.getRSSprSpec();
            while(rs.next()){
                nameSpec.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            System.out.println("ServerDb:getData():Ошибка подключения или создание Statement");
        }
        nameSpec.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nameSpecItemStateChanged(evt);
            }
        });
        nameSpec.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameSpecFocusLost(evt);
            }
        });
        nameSpec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSpecActionPerformed(evt);
            }
        });

        jLabel1.setText("Специализация врача");

        nameVrachPoluch.removeAllItems();
        try {
            ResultSet rs = Start.sDB.getRSVrachPoSpec("Детский");
            while(rs.next()){
                nameVrachPoluch.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            System.out.println("ServerDb:nameSpecItemStateChanged():Ошибка подключения или создание Statement");
        }
        nameVrachPoluch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameVrachPoluchActionPerformed(evt);
            }
        });

        jLabel2.setText("Врач");

        jLabel5.setText("Дата подтверждения");

        dtPodtv.setEditable(false);

        jScrollPane1.setViewportView(primech);

        jLabel3.setText("Примечание");

        knSave.setText("Сохранить");
        knSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knSaveActionPerformed(evt);
            }
        });

        knCancel.setText("Отменить");
        knCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knCancelActionPerformed(evt);
            }
        });

        panDtNaprav.setLayout(new javax.swing.BoxLayout(panDtNaprav, javax.swing.BoxLayout.LINE_AXIS));

        panDtPodtv.setLayout(new javax.swing.BoxLayout(panDtPodtv, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameVrachPoluch, 0, 386, Short.MAX_VALUE)
                                .addComponent(nameSpec, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(dtNaprav, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(panDtNaprav, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(dtPodtv, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(panDtPodtv, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(knSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE)
                        .addComponent(knCancel)
                        .addGap(109, 109, 109))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Name1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nameClient, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Name1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dtNaprav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(15, 15, 15))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(panDtNaprav, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameSpec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameVrachPoluch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(dtPodtv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(panDtPodtv, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(knSave)
                    .addComponent(knCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Перенаправление клиента");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nameSpecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSpecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameSpecActionPerformed

    private void nameVrachPoluchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameVrachPoluchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameVrachPoluchActionPerformed

    private void knSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knSaveActionPerformed
        int rezult = 0;
        int idVrachPoluch;
        int idSpec;

        if(whichForm == 1){
           Calendar calendar = Calendar.getInstance();
           calendar.setTime (datePicker.getDate()); // Date date
           dtNaprav.setText(Methods.stringToDate(calendar.get (Calendar.DAY_OF_MONTH),calendar.get (Calendar.MONTH)+1,calendar.get (Calendar.YEAR)));
           idVrachPoluch = Start.sDB.getIdVrach(nameVrachPoluch.getSelectedItem().toString());
           idSpec = Start.sDB.getIdSpec(nameSpec.getSelectedItem().toString());
           Perenaprav perenap = new Perenaprav(MainForm.cl.getId_klient(), Find.vr.getId(),idVrachPoluch,idSpec , dtNaprav.getText(),"",false,primech.getText(),0);
        rezult = Start.sDB.setPerenaprav(perenap,Constatnts.INSERT);
        if(rezult != 0){
            JOptionPane.showMessageDialog(null, "Перенаправление успешно добавлено", "Информация", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        }
        }
        else {
             Calendar calendar = Calendar.getInstance();
             calendar.setTime (datePickerPodtv.getDate()); // Date date
             dtPodtv.setText(Methods.stringToDate(calendar.get (Calendar.DAY_OF_MONTH),calendar.get (Calendar.MONTH)+1,calendar.get (Calendar.YEAR)));
            perenap.setDtPoluch(dtPodtv.getText());
            perenap.setPrim(perenap.getPrim() + " " + primech.getText());
            rezult = Start.sDB.setPerenaprav(perenap,Constatnts.UPDATE);
            if(rezult != 0){
            JOptionPane.showMessageDialog(null, "Перенаправление успешно обновленно", "Информация", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        }
       
        }
        
    }//GEN-LAST:event_knSaveActionPerformed

    private void knCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knCancelActionPerformed
            int reply = JOptionPane.showConfirmDialog(null, "Изменения будут потеряны", "Внимание", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION){
               dispose();
            }     
    }//GEN-LAST:event_knCancelActionPerformed

    private void nameSpecItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nameSpecItemStateChanged
        nameVrachPoluch.removeAllItems();
        try {
            ResultSet rs = Start.sDB.getRSVrachPoSpec(nameSpec.getSelectedItem().toString()); 
                            while(rs.next()){
                                nameVrachPoluch.addItem(rs.getString(1));
                }
            } catch (SQLException ex) {
                System.out.println("ServerDb:nameSpecItemStateChanged():Ошибка подключения или создание Statement");
            }     
    }//GEN-LAST:event_nameSpecItemStateChanged

    private void nameSpecFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameSpecFocusLost

    }//GEN-LAST:event_nameSpecFocusLost

    	private JComponent buildDatePickerTab() {
		JPanel panel = new JPanel();
		datePicker = new DatePicker();
		// datePicker.setDateFormat(new SimpleDateFormat("HH dd yyyy"));
		datePicker.setDateFormat(SimpleDateFormat.getDateTimeInstance());
		// datePicker.setStripTime(false);
		datePicker.setEnabled(false);
		datePicker.setKeepTime(true);
		datePicker.setStripTime(false);
		datePicker.setShowNumberOfWeek(true);
		// datePicker.setEnabled(false);
		// datePicker.setPickerStyle(DatePicker.PICKER_STYLE_BUTTON);
		// datePicker.showButtonOnly(false);
		// datePicker.setToolTipText("hello!!!!");
		// datePicker.setShowNumberOfWeek(true);
		
		Map ov = new HashMap();

		ov.put(CalendarPane.COLOR_CALENDAR_GRID_FOREGROUND_ENABLED,
				Color.BLUE);
		
		datePicker.setColorOverrideMap(ov);

		panel.setLayout(new GridBagLayout());
		panel.add(datePicker, new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0,
				GridBagConstraints.CENTER, GridBagConstraints.NONE, new Insets(
						5, 5, 5, 5), 0, 0));

		datePicker.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) {
				System.out.println("DatePicker:" + datePicker.getDate());

			}
		});

		return panel;

	}

        private JComponent buildDatePickerTabPodtv() {
		JPanel panel = new JPanel();
		datePickerPodtv = new DatePicker();
		datePickerPodtv.setDateFormat(SimpleDateFormat.getDateTimeInstance());
		datePickerPodtv.setEnabled(false);
		datePickerPodtv.setKeepTime(true);
		datePickerPodtv.setStripTime(false);
		datePickerPodtv.setShowNumberOfWeek(true);
		
		Map ov = new HashMap();

		ov.put(CalendarPane.COLOR_CALENDAR_GRID_FOREGROUND_ENABLED,
				Color.BLUE);
		
		datePickerPodtv.setColorOverrideMap(ov);

		panel.setLayout(new GridBagLayout());
		panel.add(datePickerPodtv, new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0,
				GridBagConstraints.CENTER, GridBagConstraints.NONE, new Insets(
						5, 5, 5, 5), 0, 0));

		datePickerPodtv.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) {
				System.out.println("DatePicker:" + datePickerPodtv.getDate());

			}
		});

		return panel;

	}
        
	private static class ColorAdaptor implements ChangeListener,
			ListSelectionListener {

		private GradientEditor editor;

		private JColorChooser chooser;

		public ColorAdaptor(GradientEditor editor, JColorChooser chooser) {
			super();
			this.editor = editor;
			this.chooser = chooser;

			editor.getColorSelectionModel().addListSelectionListener(this);
			chooser.getSelectionModel().addChangeListener(this);
		}

		public void valueChanged(ListSelectionEvent e) {
			int index = editor.getColorSelectionModel().getLeadSelectionIndex();
			// System.out.println(index);
			// System.out.println(e.getFirstIndex());
			// System.out.println(e.getLastIndex());
			// System.out.println("-------");

			Color c = (Color) editor.getDataModel().getValueAt(index,
					editor.getColorColumn());
			chooser.setColor(c);
		}

		public void stateChanged(ChangeEvent e) {

			if (!editor.getColorSelectionModel().isSelectionEmpty()) {
				int index = editor.getColorSelectionModel()
						.getLeadSelectionIndex();

				editor.getDataModel().setValueAt(chooser.getColor(), index,
						editor.getColorColumn());
			}

		}

	}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SprPerenapravEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SprPerenapravEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SprPerenapravEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SprPerenapravEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SprPerenapravEdit dialog = new SprPerenapravEdit(new javax.swing.JFrame(), true,1,0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Name1;
    private javax.swing.JTextField dtNaprav;
    private javax.swing.JTextField dtPodtv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton knCancel;
    private javax.swing.JButton knSave;
    private javax.swing.JLabel nameClient;
    private javax.swing.JComboBox nameSpec;
    private javax.swing.JComboBox nameVrachPoluch;
    private javax.swing.JPanel panDtNaprav;
    private javax.swing.JPanel panDtPodtv;
    private javax.swing.JTextPane primech;
    // End of variables declaration//GEN-END:variables
}
