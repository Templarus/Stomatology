/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stomatology;

import com.michaelbaranov.microba.calendar.CalendarPane;
import com.michaelbaranov.microba.calendar.DatePicker;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import static stomatology.MainForm.PervObsl_Table;
import static stomatology.MainForm.dbmPervObsl;

/**
 *
 * @author Asus
 */
public class AddDatePervichObsled extends javax.swing.JDialog {

    DatePicker datePicker;

    /**
     * Creates new form AddDatePervichObsled
     */
    public AddDatePervichObsled(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        pan.add("DatePicker", buildDatePickerTab());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pan = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        oKBut = new javax.swing.JButton();
        cancelBut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        pan.setLayout(new javax.swing.BoxLayout(pan, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText("Дата обследования");

        oKBut.setText("Ок");
        oKBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oKButActionPerformed(evt);
            }
        });

        cancelBut.setText("Отмена");
        cancelBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(pan, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(oKBut, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(cancelBut, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pan, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(oKBut, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(cancelBut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void oKButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oKButActionPerformed
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(datePicker.getDate());
        Calendar calNow = Calendar.getInstance();
        calNow.setTime(new Date());
        int proverkaDt = 0;
        int proverkaNeZap = 0;

        for (PervichObsled pervich : MainForm.cl.getPervichObsled()) {
            if (pervich.getId_pervich_obsled() == 0) {
                proverkaNeZap = proverkaNeZap + 1;
            }
        }

        if (proverkaNeZap != 0) {
            JOptionPane.showMessageDialog(null, "У вас есть не записанные в БД обследования", "Внимание", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (calNow.get(Calendar.YEAR) <= calendar.get(Calendar.YEAR)) {
                if ((calNow.get(Calendar.MONTH) <= calendar.get(Calendar.MONTH))) {
                    if (calNow.get(Calendar.DAY_OF_MONTH) < calendar.get(Calendar.DAY_OF_MONTH)) {
                        proverkaDt = 1;
                        JOptionPane.showMessageDialog(null, "Дата обследования не может быть больше текущей даты", "Внимание", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }

            if (proverkaDt == 0) {
                String dt = Methods.stringToDate(calendar.get(Calendar.DAY_OF_MONTH), calendar.get(Calendar.MONTH) + 1, calendar.get(Calendar.YEAR));
                if (getKolNezavershObsled() != 0) {
                    JOptionPane.showMessageDialog(null, "Необходимо завершить все обследования", "Внимание", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    if (Start.sDB.getKolObsledPosleDt(dt, MainForm.cl.id_klient) != 0) {
                        JOptionPane.showMessageDialog(null, "Дата не должна быть меньше последней даты обследования", "Внимание", JOptionPane.INFORMATION_MESSAGE);
                    } else {

                        int i = Start.sDB.getIdFilial(Start.idfilial);
                        PervichObsled newPervich = new PervichObsled(0, MainForm.cl.getId_klient(), Find.vr.getId(), dt, Start.sDB.getIdFilial(Start.idfilial), 0);

                        ArrayList<PervichObsledStr> pervichObsledStr = new ArrayList<>();
                        PervichObsledStr pervichStr;
                        for (int z = 0; z < 32; z++) {
                            pervichStr = new PervichObsledStr(0, z);
                            pervichStr.setStatus(getPervichObsledStrStatusData(pervichStr));
                            pervichStr.setStatGranColor(getPervichObsledGraniStatus(55, z));
                            pervichStr.setStatDesna(getPervichObsledDesnaStatus(pervichStr));
                            pervichObsledStr.add(pervichStr);

                        };
                        newPervich.setPervichObsledStr(pervichObsledStr);
                        MainForm.cl.getPervichObsled().add(newPervich);
                        Start.sDB.setNewObsledTemp(newPervich);
                        try {
                            //MainForm.idObsled = 0;
                            dbmPervObsl.setData(Start.sDB.getRSNewPervichObsled());
                            Start.sDB.deleteFromPervichNew();
                            PervObsl_Table.repaint();

                            dispose();
                        } catch (Exception ex) {
                            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }

            }

        }

    }//GEN-LAST:event_oKButActionPerformed

    public ArrayList<PervichObsledZubStatus> getPervichObsledStrStatusData(PervichObsledStr pervichStr) {
        int idPervichObsled = pervichStr.getId_pervich_obsled();
        int sprPervich = 0;
        ArrayList<PervichObsledZubStatus> pervichObsledStrStatus = new ArrayList<>();
        PervichObsledZubStatus pervichObsledZubStatusObj;

        ArrayList<SprPervich> sprPervichData = Start.sDB.getSprPervich(4);
        sprPervich = sprPervichData.size();
        for (int r = 0; r < sprPervich; r++) {
            pervichObsledZubStatusObj = new PervichObsledZubStatus(r, false);
            pervichObsledStrStatus.add(pervichObsledZubStatusObj);
        };

        return pervichObsledStrStatus;
    }

    public ArrayList<PervichObsledGraniStatus> getPervichObsledGraniStatus(int idPerObsled, int z) {
        int idPervichObsled = 55;//pervichStr.getId_pervich_obsled();
        int idZub = z;//pervichStr.getId_zub();
        ArrayList<PervichObsledGraniStatus> pervichObsledGraniStatus = new ArrayList<>();
        PervichObsledGraniStatus pervichObsledGraniStatusObj;

        //Заполним -1 все грани зуба
        for (int gr = 0; gr < 13; gr++) {
            Integer[] color = {255, 255, 255};
            pervichObsledGraniStatusObj = new PervichObsledGraniStatus(-1, gr, "", color);
            pervichObsledGraniStatus.add(pervichObsledGraniStatusObj);
        }

        return pervichObsledGraniStatus;
    }

    public ArrayList<PervichObsledDesnaStatus> getPervichObsledDesnaStatus(PervichObsledStr pervichStr) {
        int idPervichObsled = pervichStr.getId_pervich_obsled();
        int sprPervich = 0;
        ArrayList<PervichObsledDesnaStatus> pervichObsledDesnaStatus = new ArrayList<>();
        PervichObsledDesnaStatus PervichObsledDesnaStatusObj;

        ArrayList<SprPervich> sprPervichData = Start.sDB.getSprPervichData(5);
        sprPervich = sprPervichData.size();
        for (int r = 0; r < sprPervich; r++) {
            PervichObsledDesnaStatusObj = new PervichObsledDesnaStatus(r, false);
            pervichObsledDesnaStatus.add(PervichObsledDesnaStatusObj);
        };

        return pervichObsledDesnaStatus;
    }


    private void cancelButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Изменения будут потеряны", "Внимание", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            dispose();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButActionPerformed

    public static int getKolNezavershObsled() {
        int rezult = 0;
        ArrayList<PervichObsled> pevichObsledList = MainForm.cl.getPervichObsled();
        for (PervichObsled pr : pevichObsledList) {
            if (pr.getFlZapret() == 0) {
                rezult = rezult + 1;
            }
        }
        return rezult;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddDatePervichObsled.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddDatePervichObsled.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddDatePervichObsled.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddDatePervichObsled.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddDatePervichObsled dialog = new AddDatePervichObsled(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private JComponent buildDatePickerTab() {
        JPanel panel = new JPanel();
        datePicker = new DatePicker();
        datePicker.setDateFormat(SimpleDateFormat.getDateTimeInstance());
        datePicker.setEnabled(false);
        datePicker.setKeepTime(true);
        datePicker.setStripTime(false);
        datePicker.setShowNumberOfWeek(true);
        Map ov = new HashMap();

        ov.put(CalendarPane.COLOR_CALENDAR_GRID_FOREGROUND_ENABLED,
                Color.BLUE);

        datePicker.setColorOverrideMap(ov);

        panel.setLayout(new GridBagLayout());
        panel.add(datePicker, new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0,
                GridBagConstraints.CENTER, GridBagConstraints.NONE, new Insets(
                        5, 5, 5, 5), 0, 0));

        datePicker.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
            }
        });

        return panel;

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton oKBut;
    private javax.swing.JPanel pan;
    // End of variables declaration//GEN-END:variables
}
