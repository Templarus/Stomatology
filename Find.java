/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stomatology;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Asus
 */
public class Find extends javax.swing.JFrame {

    public static Vrach vr;
    private Client cl;
    public static MainForm mf;
    private JLabel[] lblArray = null;
    int y;
    private DatabaseTableModel dbm = new DatabaseTableModel(false);

    public Find(Vrach vr) {
        Find.vr = vr;
        list = Start.sDB.getClientData(0, "default", "default", "default");
        initComponents();
        UpdateTableFind();
    }

    public void UpdateTableFind() {
        int countRow;
        countRow = tableFind.getRowCount();
        lblArray = new JLabel[countRow];
        for (int i = 0; i < countRow; i++) {
            lblArray[i] = new JLabel("!");
            Integer idClient = (Integer) tableFind.getValueAt(i, 0);
            int h = tableFind.getRowHeight();
            y = h * i;
            if (Start.sDB.getCountPerenaprav(idClient, vr.getId()) != 0) {
                tableFind.add(lblArray[i]);
                lblArray[i].setForeground(Color.RED);
                lblArray[i].setVisible(true);
                lblArray[i].setBounds(5, y, 20, 16);
            } else {
                lblArray[i].setVisible(false);
            }

//        }
        }
        tableFind.getColumnModel().getColumn(0).setPreferredWidth(20);
        tableFind.getColumnModel().getColumn(1).setPreferredWidth(200);
        tableFind.getColumnModel().getColumn(2).setPreferredWidth(70);
        tableFind.getColumnModel().getColumn(3).setPreferredWidth(70);
        tableFind.getColumnModel().getColumn(4).setPreferredWidth(70);
        tableFind.doLayout();
    }

    public Vrach getVr() {
        return vr;
    }

    public void setVr(Vrach vr) {
        Find.vr = vr;
    }

    public Client getCl() {
        return cl;
    }

    public void setCl(Client cl) {
        this.cl = cl;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        famField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        imyaField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        otchField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFind = new javax.swing.JTable();
        find = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        newClient = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Текущий пользователь " + vr.getFIO(vr)
        );
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(1200, 555));
        setSize(new java.awt.Dimension(1200, 555));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setMaximumSize(new java.awt.Dimension(1280, 720));
        jPanel1.setMinimumSize(new java.awt.Dimension(900, 600));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 600));
        jPanel1.setLayout(null);
        getContentPane().add(jPanel1);
        jPanel1.setBounds(900, 600, 900, 600);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Форма поиска");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 10, 160, 40);

        jLabel1.setText("Фамилия");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(180, 30, 70, 14);

        famField.setToolTipText("");
        famField.setPreferredSize(new java.awt.Dimension(100, 20));
        getContentPane().add(famField);
        famField.setBounds(260, 30, 100, 20);

        jLabel2.setText("Имя");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(369, 30, 40, 20);

        imyaField.setPreferredSize(new java.awt.Dimension(100, 20));
        imyaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imyaFieldActionPerformed(evt);
            }
        });
        getContentPane().add(imyaField);
        imyaField.setBounds(420, 30, 100, 20);

        jLabel4.setText("Отчество");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(530, 30, 70, 14);

        otchField.setPreferredSize(new java.awt.Dimension(100, 20));
        getContentPane().add(otchField);
        otchField.setBounds(590, 30, 100, 20);

        jScrollPane1.setBorder(null);

        tableFind.setModel(dbm);
        try {

            dbm.setDataSource(Start.sDB.rsClientFind);
        } catch (Exception ex){
            System.out.println("Создание таблицы пойска: ошибка доступа к RS"+ ex);
        }
        tableFind.setColumnSelectionAllowed(true);
        tableFind.setGridColor(new java.awt.Color(204, 204, 204));
        tableFind.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableFind.getTableHeader().setReorderingAllowed(false);
        tableFind.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableFindMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tableFindMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tableFind);
        tableFind.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tableFind.getColumnModel().getColumn(2).setPreferredWidth(2);
        tableFind.getColumnModel().getColumn(2).setWidth(10);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 1170, 490);

        find.setText("Найти");
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });
        getContentPane().add(find);
        find.setBounds(850, 20, 140, 30);

        clear.setText("Показать все");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear);
        clear.setBounds(710, 20, 140, 30);

        newClient.setText("Новый");
        newClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newClientActionPerformed(evt);
            }
        });
        getContentPane().add(newClient);
        newClient.setBounds(1040, 20, 140, 30);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
        for (JLabel l : lblArray) {
            l.setVisible(false);
        }
        String fam = famField.getText().equals("") ? "default" : famField.getText();
        String imya = imyaField.getText().equals("") ? "default" : imyaField.getText();
        String otch = otchField.getText().equals("") ? "default" : otchField.getText();
        list = Start.sDB.getClientData(0, fam, imya, otch);

        DatabaseTableModel dbm = (DatabaseTableModel) tableFind.getModel();

        try {
            dbm.setDataSource(Start.sDB.rsClientFind);
        } catch (Exception ex) {
            System.out.println("Ошибка создания и получения RS Start.sDB.rsClientFind");
        }
        UpdateTableFind();
    }//GEN-LAST:event_findActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if (Start.sDB.getCountVrem(vr.getId()) != 0) {
            SpisVrem spVrem = new SpisVrem(this, rootPaneCheckingEnabled);
            spVrem.setBounds(500, 300, spVrem.getMinimumSize().width, spVrem.getMinimumSize().height);
            spVrem.setVisible(true);
        }
    }//GEN-LAST:event_formWindowOpened


    private void imyaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imyaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imyaFieldActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        for (JLabel l : lblArray) {
            l.setVisible(false);
        }
        famField.setText("");
        imyaField.setText("");
        otchField.setText("");
        list = Start.sDB.getClientData(0, "default", "default", "default");
        DatabaseTableModel dbm = (DatabaseTableModel) tableFind.getModel();
        try {
            dbm.setDataSource(Start.sDB.rsClientFind);
        } catch (Exception ex) {
            System.out.println("Ошибка создания и получения RS Start.sDB.rsClientFind");
        }
        UpdateTableFind();
    }//GEN-LAST:event_clearActionPerformed

    private void tableFindMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableFindMouseClicked

        Integer idClient = (Integer) tableFind.getValueAt(tableFind.getSelectedRow(), 0);

        for (Client c : list) {
            if (c.getId_klient() == idClient) {
                this.cl = c;
                int countRow = Start.sDB.getCountPerenaprav(this.cl.getId_klient(), vr.getId());
                if (countRow != 0) {
                    //System.out.println("Start.sDB.getCountPerenaprav(this.cl.getId_klient(), vr.getId()) != 0" + Start.sDB.getCountPerenaprav(this.cl.getId_klient(), vr.getId()));
                    for (int i = 0; i < countRow; i++) {
                        JOptionPane.showMessageDialog(null, "Клиент был вам перенаправлен. Необходимо проставить дату прихода", "Внимание", JOptionPane.INFORMATION_MESSAGE);
                        SprPerenapravEdit perenapEdit = new SprPerenapravEdit(this, true, 2, this.cl.getId_klient());
                        perenapEdit.setVisible(true);
                    }
                }
                break;
            }
        }
        cl = Start.sDB.getPervichObsledData(cl);
        cl = Start.sDB.getPoseshData(cl);
        mf = new MainForm(vr, cl);
        dispose();
        mf.setVisible(true);
    }//GEN-LAST:event_tableFindMouseClicked

    private void newClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newClientActionPerformed
        NewClient newClient = new NewClient(this, rootPaneCheckingEnabled, vr);
        newClient.setVisible(true);
        try {
            Start.sDB.getClientData(0, "default", "default", "default");
            dbm.setDataSource(Start.sDB.rsClientFind);
            tableFind.getColumnModel().getColumn(0).setPreferredWidth(20);
            tableFind.getColumnModel().getColumn(1).setPreferredWidth(200);
            tableFind.getColumnModel().getColumn(2).setPreferredWidth(70);
            tableFind.getColumnModel().getColumn(3).setPreferredWidth(70);
            tableFind.getColumnModel().getColumn(4).setPreferredWidth(70);
            tableFind.doLayout();
        } catch (Exception ex) {
            System.out.println("Создание таблицы поиска: ошибка доступа к RS" + ex);
        }

       // tableFind.repaint();
        // tableFind.updateUI();
    }//GEN-LAST:event_newClientActionPerformed

    private void tableFindMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableFindMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tableFindMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Find.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Find.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Find.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Find.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Find(null).setVisible(true);
        });
    }
    private ArrayList<Client> list;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JTextField famField;
    private javax.swing.JButton find;
    private javax.swing.JTextField imyaField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newClient;
    private javax.swing.JTextField otchField;
    public javax.swing.JTable tableFind;
    // End of variables declaration//GEN-END:variables
}
